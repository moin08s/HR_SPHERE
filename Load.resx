<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>